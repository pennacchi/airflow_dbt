name: CI_action

on:
  pull_request:
    branches:
      - main

jobs:
  CI_job:
    runs-on: ubuntu-latest
    
    env:
      GCLOUD_SERVICE_KEY: ${{ secrets.GCLOUD_SERVICE_KEY }}
      GCLOUD_STORAGE_PATH_MANIFEST: ${{ secrets.GCLOUD_STORAGE_PATH_MANIFEST }}
      DEV_BIGQUERY_PROJECT: ${{ secrets.DEV_BIGQUERY_PROJECT }}
      DEV_BIGQUERY_DATASET: ${{ secrets.DEV_BIGQUERY_DATASET }}
      PROD_BIGQUERY_PROJECT: ${{ secrets.PROD_BIGQUERY_PROJECT }}
      PROD_BIGQUERY_DATASET: ${{ secrets.PROD_BIGQUERY_DATASET }}
      GOOGLE_APPLICATION_CREDENTIALS_TYPE: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_TYPE }}
      GOOGLE_APPLICATION_CREDENTIALS_PROJECT_ID: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_PROJECT_ID }}
      GOOGLE_APPLICATION_CREDENTIALS_PRIVATE_KEY_ID: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_PRIVATE_KEY_ID }}
      GOOGLE_APPLICATION_CREDENTIALS_PRIVATE_KEY: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_PRIVATE_KEY }}
      GOOGLE_APPLICATION_CREDENTIALS_CLIENT_EMAIL: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_CLIENT_EMAIL }}
      GOOGLE_APPLICATION_CREDENTIALS_CLIENT_ID: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_CLIENT_ID }}
      GOOGLE_APPLICATION_CREDENTIALS_AUTH_URI: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_AUTH_URI }}
      GOOGLE_APPLICATION_CREDENTIALS_TOKEN_URI: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_TOKEN_URI }}
      GOOGLE_APPLICATION_CREDENTIALS_AUTH_PROVIDER_X509_CERT_URL: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_AUTH_PROVIDER_X509_CERT_URL }}
      GOOGLE_APPLICATION_CREDENTIALS_CLIENT_X509_CERT_URL: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_CLIENT_X509_CERT_URL }}
  
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: pip install -r requirements.txt
    
    # - name: Authenticate to Google Cloud
    #   uses: google-github-actions/auth@v0.4.3
    #   with:
    #     credentials_json: ${{ secrets.GCLOUD_SERVICE_KEY }}
    
    # - name: Set up Cloud SDK
    #   uses: google-github-actions/setup-gcloud@v1
    #   with:
    #     project_id: ${{ secrets.DEV_BIGQUERY_PROJECT }}
    
    # - name: Copy manifest.json from Google Cloud Storage
    #   run: |
    #     gsutil cp gs://${{ env.GCLOUD_STORAGE_PATH_MANIFEST }}/manifest.json ./ || echo "Manifest not found"
    
    # - name: Get Schema ID
    #   id: schema_id
    #   run: echo "SCHEMA_ID=${{ github.event.pull_request.number }}" >> $GITHUB_ENV

    # - name: list files
    #   run: |
    #     ls
    
    # - name: Run dbt debug
    #   run: |
    #     dbt debug --profiles-dir dbt_project --project-dir dbt_project --target pr --vars "schema_id: $SCHEMA_ID"

    # - name: Run dbt deps
    #   run: |
    #     dbt deps --profiles-dir dbt_project --project-dir dbt_project
    
    # - name: Run dbt build
    #   run: |
    #     if [ -f "./manifest.json" ]; then
    #       dbt run -s 'state:modified+' --defer --state ./ --profiles-dir dbt_project --project-dir dbt_project --target pr --vars "schema_id: $SCHEMA_ID"
    #     else
    #       dbt run --profiles-dir dbt_project --project-dir dbt_project --target pr --vars "schema_id: $SCHEMA_ID"
    #     fi
